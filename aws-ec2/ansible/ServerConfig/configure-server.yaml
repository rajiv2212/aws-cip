- name: Configure EC2 Instance
  hosts: 
    - cip-instance
    - a360-instance
  become: true
  vars:
    log_file: "{{ lookup('env', 'LOG_FILE').split(',') | first}}"
    
  tasks:

    - name: Load Global parameters
      include_vars:
        file: ../installer-versions.yml

    - name: Set hostname
      hostname:
        name: "{{ cip_hostname }}"
      when: inventory_hostname != 'a360-instance'
    - name: Set A360 hostname
      hostname:
        name: "{{ a360_hostname }}"
      when: inventory_hostname == 'a360-instance'
    - name: Create Users
      user:
        name: "{{ item }}"
        state: present
      loop:
        - abinitio
    - name: Create home directory
      file:
        path: "/home/{{ item }}"
        state: directory
        owner: "{{ item }}"
        group: "{{ item }}"
      loop:
        - abinitio
    
    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>User Creation Completed on host {{ inventory_hostname }}
             User : abinitio
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Create directory hierarchy and set ownership
      shell: |
        sudo mkdir -p /apps/abinitio/release
        sudo mkdir -p /data/eme/cipeme
        sudo mkdir -p /data/a360
        sudo mkdir -p /data/sand/appconfdir
        sudo mkdir -p /apps/abinitio/abinitio-install
        sudo mkdir -p /apps/abinitio/abinitio-deployment/ag
        sudo mkdir -p /apps/abinitio/abinitio-deployment/cc
        sudo chown -R {{ item }}:{{ item }} /apps/abinitio/release
        sudo chown -R {{ item }}:{{ item }} /data/eme/cipeme
        sudo chown -R {{ item }}:{{ item }} /data/a360
        sudo chown -R {{ item }}:{{ item }} /data
        sudo chown -R {{ item }}:{{ item }} /apps/abinitio/abinitio-install
        sudo chown -R {{ item }}:{{ item }} /apps/abinitio/abinitio-deployment
        sudo chown -R {{ item }}:{{ item }} /apps/abinitio/abinitio-deployment/ag
        sudo chown -R {{ item }}:{{ item }} /apps/abinitio/abinitio-deployment/cc
      loop:
        - abinitio

    - name: Install OpenJDK 8 on CentOS/RHEL
      when: ansible_distribution in ['CentOS', 'RedHat'] and inventory_hostname != 'a360-instance'
      yum:
        name: java-1.8.0-openjdk
        state: present
    
    - name: Log step
      when: ansible_distribution in ['CentOS', 'RedHat'] and inventory_hostname != 'a360-instance'
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>JDK 8 installed on CIP Instance
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Install OpenJDK 11 on CentOS/RHEL
      when: ansible_distribution in ['CentOS', 'RedHat'] and inventory_hostname == 'a360-instance'
      ansible.builtin.package:
        name: java-11-openjdk
        state: present


    - name: Log step
      when: ansible_distribution in ['CentOS', 'RedHat'] and inventory_hostname == 'a360-instance'
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>JDK 11 installed on A360 Instance
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: "Fetch JAVA_HOME"
      shell: "dirname $(dirname $(readlink -f $(which java)))"
      register: java_home

    - name: Set JAVA_HOME Environment Variable
      lineinfile:
        path: /etc/profile
        regexp: '^export JAVA_HOME='
        line: 'export JAVA_HOME={{ java_home.stdout }}'
        insertbefore: '^export PATH='
      become: yes
      notify:
        - Reload Profile

    - name: Install Node.js on CentOS/RHEL
      when: ansible_distribution in ['CentOS', 'RedHat']
      yum:
        name: nodejs
        state: present
    
    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>Node.js successfully installed on {{ inventory_hostname }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Install npm (Node Package Manager)
      when: ansible_distribution in ['CentOS', 'RedHat', 'Debian', 'Ubuntu']
      package:
        name: npm
        state: present

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>npm successfully installed on {{ inventory_hostname }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false
    
    - name: Install ksh on Red Hat-based systems
      yum:
        name: ksh
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' 
  
    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>ksh shell successfully installed on {{ inventory_hostname }}
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Install pip3
      yum:
        name: python3-pip
        state: present
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat' 

    - name: Fetch python Version
      shell: "python3 --version"
      register: p_version

    - name: Log step
      lineinfile:
        path: "{{ log_file }}"
        line: |
          =>pip3 successfully installed on {{ inventory_hostname }}. Python Version "{{ p_version.stdout }}"
        state: present
      delegate_to: localhost
      no_log: true
      become: false

    - name: Install pexpect library using pip
      pip:
        name: pexpect
        state: present
  
  handlers:
    - name: Reload Profile
      shell: source /etc/profile  # Command to reload the profile
    
